486
(2 2)
(+ 137 349)
(- 1000 334)
(* 5 99)
(/ 10 5)
(- 5)
(- 5 -3 (- 4))
(+ 2.7 10)
(+ 21 35 12 7)
(* 25 4 12)
(+ (* 3 5) (- 10 6))
(+ (* 3 (+ (* 2 4) (+ 3 5))) (+ (- 10 7) 6))
(* (+ 2 (* 4 6))  (+ 3 5 7))
(define pi 3.14159)
(define radius 10)
(* pi (* radius radius))
(define circumference (* 2 pi radius))
circumference
(define (square x) (* x x))
(define (sum-of-squares x y)(+ (square x) (square y)))
(square 5)
(square (square 3))
(sum-of-squares 3 4)
(sum-of-squares (square 3) (square 4))
(define (f a)(sum-of-squares (+ a 1) (* a 2)))
(f 5)
(define a 3)
(define b (+ a 1))
(+ a b (* a b))
(> a b)
(if (and (> b a) (< b (* a b))) b a)
(cond ((= a 4) 6) ((= b 4) (+ 6 7 a)) (else 25))
(+ 2 (if (> b a) b a))
(* (cond ((> a b) a) ((< a b) b) (else -1)) (+ a 1))
#(define (a-plus-abs-b a b)((if (> b 0) + -) a b))
#(a-plus-abs-b 3 -5)
#(a-plus-abs-b 2 4)
(define (abs x)(cond ((< x 0) (- x))(else x)))
(define (average x y)(/ (+ x y) 2))
(define (improve guess x)(average guess (/ x guess)))
(define (good-enough? guess x)(< (abs (-(square guess) x)) 0.001))
(define (sqrt-iter guess x)(if (good-enough? guess x) guess(sqrt-iter (improve guess x) x)))
(define (sqrt x) (sqrt-iter 1.0 x))
(sqrt 9)